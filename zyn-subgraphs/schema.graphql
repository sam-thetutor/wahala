# Market entity - aggregated data for each market
type Market @entity(immutable: false) {
  id: ID! # marketId
  question: String!
  description: String!
  source: String!
  endTime: BigInt!
  creator: Bytes!
  creationFee: BigInt!
  totalPool: BigInt!
  totalYes: BigInt!
  totalNo: BigInt!
  status: MarketStatus!
  outcome: Boolean
  createdAt: BigInt!
  resolvedAt: BigInt
  resolver: Bytes
}

# Participant entity - tracks user participation in markets
type Participant @entity(immutable: false) {
  id: ID! # marketId-userAddress
  market: Market!
  user: Bytes!
  totalYesShares: BigInt!
  totalNoShares: BigInt!
  totalInvestment: BigInt!
  firstPurchaseAt: BigInt!
  lastPurchaseAt: BigInt!
  transactionCount: BigInt!
}

# User entity - tracks user information
type User @entity(immutable: false) {
  id: ID! # user address
  username: String
  totalMarketsCreated: BigInt!
  totalMarketsParticipated: BigInt!
  totalInvestment: BigInt!
  totalWinnings: BigInt!
  createdAt: BigInt!
}

# Global stats entity
type GlobalStats @entity(immutable: false) {
  id: ID! # "global"
  totalMarkets: BigInt!
  totalParticipants: BigInt!
  totalVolume: BigInt!
  totalFees: BigInt!
  lastUpdated: BigInt!
}

# Event entities (immutable)
type MarketCreated @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt!
  creator: Bytes!
  question: String!
  description: String!
  source: String!
  endTime: BigInt!
  creationFee: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SharesBought @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt!
  buyer: Bytes!
  side: Boolean!
  amount: BigInt!
  totalYes: BigInt!
  totalNo: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MarketResolved @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt!
  resolver: Bytes!
  outcome: Boolean!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreatorFeeClaimed @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt!
  creator: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WinningsClaimed @entity(immutable: true) {
  id: Bytes!
  marketId: BigInt!
  claimant: Bytes!
  amount: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UsernameSet @entity(immutable: true) {
  id: Bytes!
  user: Bytes!
  username: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UsernameChanged @entity(immutable: true) {
  id: Bytes!
  user: Bytes!
  oldUsername: String!
  newUsername: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

# Enums
enum MarketStatus {
  ACTIVE
  RESOLVED
  CANCELLED
}